#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        if (n == 0) return 0;

        int left = 0, right = n - 1;
        int left_max = 0, right_max = 0;
        int water = 0;

        while (left < right) {
            if (height[left] < height[right]) {
                if (height[left] >= left_max) {
                    left_max = height[left];
                } else {
                    water += left_max - height[left];
                }
                left++;
            } else {
                if (height[right] >= right_max) {
                    right_max = height[right];
                } else {
                    water += right_max - height[right];
                }
                right--;
            }
        }
        return water;
    }
};

int main() {
    Solution sol;
    vector<int> height;
    string input;

    cout << "Enter heights:\n";
    getline(cin, input);

    if (input.find('[') != string::npos) {
        input.erase(remove(input.begin(), input.end(), '['), input.end());
        input.erase(remove(input.begin(), input.end(), ']'), input.end());
        stringstream ss(input);
        string num;
        while (getline(ss, num, ',')) {
            height.push_back(stoi(num));
        }
    } else {
        stringstream ss(input);
        int num;
        while (ss >> num) {
            height.push_back(num);
        }
    }

    cout << "Total water trapped = " << sol.trap(height) << endl;
    return 0;
}

/*
Enter heights:
[0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]
Total water trapped = 6
*/
